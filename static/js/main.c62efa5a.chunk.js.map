{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","startFilter","query","status","filterReducer","filter","todosReducer","todos","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","id","title","completed","dispatch","className","classNames","onClick","currentTodoActions","TodoList","useState","warning","setWarning","filtredTodos","includes","toLowerCase","filterTodos","useEffect","length","map","TodoFilter","onSubmit","event","preventDefault","onChange","target","value","filterActions","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","email","name","user","setUser","userId","getUser","data","href","App","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"mOAoBaA,EANG,SAACC,GAAD,MAAgC,CAC9CC,KAAM,kBACNC,QAASF,IAIED,EARM,iBAAyB,CAAEE,KAAM,uBA6BrCE,EAhBY,WAGd,IAFXC,EAEU,uDAFK,KACfC,EACU,uCACV,OAAQA,EAAOJ,MACb,IAAK,qBACH,OAAO,KAET,IAAK,kBACH,OAAOI,EAAOH,QAEhB,QACE,OAAOE,I,OCrBPE,EAAc,CAAEC,MAAO,GAAIC,OAAQ,OAkB1BC,EAhBO,WAGR,IAFZC,EAEW,uDAFMJ,EACjBD,EACW,uCACX,OAAQA,EAAOJ,MACb,IAAK,mBACH,OAAO,2BAAKS,GAAZ,IAAoBH,MAAOF,EAAOH,UAEpC,IAAK,oBACH,OAAO,2BAAKQ,GAAZ,IAAoBF,OAAQH,EAAOH,UAErC,QACE,OAAOQ,IAKAX,EA7BI,SAACQ,GAAD,MAAoC,CACnDN,KAAM,mBACNC,QAASK,IA2BER,EAxBK,SAACS,GAAD,MAAsC,CACtDP,KAAM,oBACNC,QAASM,ICSIG,EAVM,WAAwD,IAAvDC,EAAsD,uDAAtC,GAAIP,EAAkC,uCAC1E,MACO,cADCA,EAAOJ,KAEJI,EAAOH,QAGPU,GAKAb,EAhBI,SAACa,GAAD,MAAmC,CAClDX,KAAM,YACNC,QAASU,ICDLC,EAAcC,0BAAgB,CAClCC,YAAaZ,EACbO,OAAQD,EACRG,MAAOD,IAIIK,EAAQC,sBACnBJ,EACAK,8BACEC,0BAAgBC,O,4BCfPC,EAAoCC,IACpCC,EAAkDC,I,uBCOlDC,EAA4B,SAAC,GAAc,IAAZzB,EAAW,EAAXA,KAClC0B,EAAyB1B,EAAzB0B,GAAIC,EAAqB3B,EAArB2B,MAAOC,EAAc5B,EAAd4B,UACbC,EAAWR,IAGXN,EAAcQ,GAAe,SAAAnB,GAAK,OAAIA,EAAMW,gBAAgB,CAAEW,GAAI,GAExE,OACE,qBACE,UAAQ,OACRI,UAAWC,IAAW,CACpB,4BAA6BhB,EAAYW,KAAOA,IAHpD,UAME,oBAAII,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,eAAd,SACGF,GACC,sBAAME,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWC,IAAW,CACvB,mBAAoBH,EACpB,mBAAoBA,IAFtB,SAKGD,MAIL,oBAAIG,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACV7B,KAAK,SACL+B,QAAS,kBAlCoBH,EAASI,EAkCfjC,KAJzB,SAME,sBAAM8B,UAAU,OAAhB,SACE,mBAAGA,UAAWC,IAAW,CACvB,aAAchB,EAAYW,KAAOA,EACjC,mBAAoBX,EAAYW,KAAOA,gBCjCxCQ,EAAqB,WAChC,IAAMtB,EAAQW,GAAe,SAAAnB,GAAK,OAAIA,EAAMQ,SAC5C,EAA0BW,GAAe,SAAAnB,GAAK,OAAIA,EAAMM,UAAhDH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACf,EAA8B2B,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAnBY,SAAC1B,EAAeL,EAAeC,GACjD,OAAOI,EACJF,QAAO,qBAAGiB,MAAkBY,SAAShC,EAAMiC,kBAC3C9B,QAAO,YAAoB,IAAjBkB,EAAgB,EAAhBA,UACT,OAAQpB,GACN,IAAK,SACH,OAAQoB,EACV,IAAK,YACH,OAAOA,EACT,QACE,OAAO,MASMa,CAAY7B,EAAOL,EAAOC,GAU/C,OARAkC,qBAAU,WACoB,IAAxBJ,EAAaK,OACfN,GAAW,GAEXA,GAAW,KAEZ,CAACC,IAGF,mCACGF,EACC,mBAAGN,UAAU,0BAAb,iEAKA,wBAAOA,UAAU,+BAAjB,UACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,wCAKJ,gCACGQ,EACEM,KAAI,SAAC5C,GAAD,OACH,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAK0B,eC3DnCmB,EAAuB,WAClC,IAAMhB,EAAWR,IAMjB,OACE,uBACES,UAAU,mBACVgB,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAF3B,UAIE,mBAAGlB,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRmB,SAAU,SAACF,GAAD,OAbDvC,EAasBuC,EAAMG,OAAOC,MAbhBtB,EACpCuB,EAAwB5C,IADR,IAACA,GAWX,UAIE,wBAAQ2C,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGrB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACR7B,KAAK,OACL6B,UAAU,QACVuB,YAAY,YACZJ,SAAU,SAACF,GA7BF,IAACxC,IA8BCwC,EAAMG,OAAOC,MA9BItB,EAASuB,EAAuB7C,OAiC9D,sBAAMuB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBwB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRtD,KAAK,SACL6B,UAAU,oBCpCtB,SAAS0B,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,IClBMC,EAAmB,kBAC9B,qBAAKrC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCWNsC,EAA6B,SAAC,GAAc,IAAZpE,EAAW,EAAXA,KAC3C,EAAwBmC,mBAAe,CACrCkC,MAAO,GACPC,KAAM,KAFR,mBAAOC,EAAP,KAAaC,EAAb,KAKQF,EAAgBC,EAAhBD,KAAMD,EAAUE,EAAVF,MAEZ3C,EAIE1B,EAJF0B,GACAE,EAGE5B,EAHF4B,UACA6C,EAEEzE,EAFFyE,OACA9C,EACE3B,EADF2B,MAGFe,qBAAU,YFPW,SAAC+B,GAAD,OAAoBjB,EAAG,iBAAiBiB,KEQ3DC,CAAQD,GACLV,MAAK,SAAAY,GAAI,OAAIH,EAAQG,QACvB,IAEH,IAAM9C,EAAWR,IAGjB,OACE,sBAAKS,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEZwC,EAGG,sBAAKxC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYJ,KAIZ,wBACEzB,KAAK,SACL6B,UAAU,SACV,UAAQ,cACRE,QAvBG,kBAAMH,EAASI,WA2BtB,sBAAKH,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SAA4CH,IAC5C,oBAAGG,UAAU,QAAQ,UAAQ,cAA7B,UAEIF,EACI,wBAAQE,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEL,OACD,mBAAG8C,KAAI,iBAAYP,GAAnB,SAA6BC,aA7BnC,cAAC,EAAD,QC7BCO,EAAgB,WAC3B,IAAM9D,EAAcQ,GAAe,SAAAnB,GAAK,OAAIA,EAAMW,eAC5Cc,EAAWR,IAGjBqB,qBAAU,WHEkBc,EAAY,UGAnCO,MAAK,SAAAY,GAAI,OAJ2B9C,EAASiD,EAIvBH,SACxB,IACH,IAAM/D,EAAQW,GAAe,SAAAnB,GAAK,OAAIA,EAAMQ,SAE5C,OACE,qCACE,qBAAKkB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SAEqB,IAAjBlB,EAAM+B,OACF,cAAC,EAAD,IAEA,qCACE,oBAAIb,UAAU,QAAd,oBACA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,eASff,GAAe,cAAC,EAAD,CAAWf,KAAMe,QCxCjCgE,EAAO,kBACX,cAAC,IAAD,CAAU/D,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKNgE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.c62efa5a.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n\n    case 'currentTodo/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type Filter = { query: string; status: string; };\ntype SetQueryAction = { type: 'filter/SET_QUERY'; payload: string; };\ntype SetStatusAction = { type: 'filter/SET_STATUS'; payload: string; };\n\ntype Action = SetQueryAction | SetStatusAction;\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst setStatus = (status: string): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nconst startFilter = { query: '', status: 'all' };\n\nconst filterReducer = (\n  filter: Filter = startFilter,\n  action: Action,\n): Filter => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return { ...filter, query: action.payload };\n\n    case 'filter/SET_STATUS':\n      return { ...filter, status: action.payload };\n\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\nexport const actions = { setQuery, setStatus };\n","import { Todo } from '../types/Todo';\n\ntype SetTodoAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodoAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nconst todosReducer = (todos: Todo[] = [], action: SetTodoAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\nexport const actions = { setTodos };\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, title, completed } = todo;\n  const dispatch = useAppDispatch();\n\n  const setTodo = (todoToSet: Todo) => dispatch(currentTodoActions.setTodo(todoToSet));\n  const currentTodo = useAppSelector(state => state.currentTodo) || { id: 0 };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': currentTodo.id === id,\n      })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames({\n              'far fa-eye': currentTodo.id !== id,\n              'far fa-eye-slash': currentTodo.id === id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\nconst filterTodos = (todos: Todo[], query: string, status: string) => {\n  return todos\n    .filter(({ title }) => title.includes(query.toLowerCase()))\n    .filter(({ completed }) => {\n      switch (status) {\n        case 'active':\n          return !completed;\n        case 'completed':\n          return completed;\n        default:\n          return true;\n      }\n    });\n};\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const [warning, setWarning] = useState(false);\n  const filtredTodos = filterTodos(todos, query, status);\n\n  useEffect(() => {\n    if (filtredTodos.length === 0) {\n      setWarning(true);\n    } else {\n      setWarning(false);\n    }\n  }, [filtredTodos]);\n\n  return (\n    <>\n      {warning ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n\n          </thead>\n\n          <tbody>\n            {filtredTodos\n              .map((todo) => (\n                <TodoItem todo={todo} key={todo.id} />\n              ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const setQuery = (query: string) => dispatch(filterActions.setQuery(query));\n  const setStatus = (status: string) => dispatch(\n    filterActions.setStatus(status),\n  );\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n};\n\ntype User = {\n  email: string;\n  name: string;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const [user, setUser] = useState<User>({\n    email: '',\n    name: '',\n  });\n\n  const { name, email } = user;\n  const {\n    id,\n    completed,\n    userId,\n    title,\n  } = todo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(data => setUser(data));\n  }, []);\n\n  const dispatch = useAppDispatch();\n  const removeTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {\n        !name\n          ? <Loader />\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={removeTodo}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n                <p className=\"block\" data-cy=\"mo dal-user\">\n                  {\n                    completed\n                      ? <strong className=\"has-text-success\">Done</strong>\n                      : <strong className=\"has-text-danger\">Planned</strong>\n                  }\n                  {' by '}\n                  <a href={`mailto:${email}`}>{name}</a>\n                </p>\n              </div>\n            </div>\n          )\n      }\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const setTodos = (todosToSet: Todo[]) => dispatch(todosActions.setTodos(todosToSet));\n\n  useEffect(() => {\n    getTodos()\n      .then(data => setTodos(data));\n  }, []);\n  const todos = useAppSelector(state => state.todos);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {\n              todos.length === 0\n                ? <Loader />\n                : (\n                  <>\n                    <h1 className=\"title\">Todos:</h1>\n                    <div className=\"block\">\n                      <TodoFilter />\n                    </div>\n                    <div className=\"block\">\n                      <TodoList />\n                    </div>\n                  </>\n                )\n            }\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal todo={currentTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}